$container-width: 38em;
$silver: #EEE;
$font-family: "ff-tisa-sans-web-pro", "Tisa Sans Pro", "Avenir Next", "Trebuchet MS", Verdana, sans-serif;
// $monospace-font-family: "Source Code Pro"; // Default already
@import "../../node_modules/basscss-sass/defaults";

$purple: #897391;
$red: #DD817D;
$pink: #EEC6C0;
$button-color: $white;
$button-background-color: $purple;
$button-font-weight: normal;
$green: #99DD7D;
$yellow: #F7EB93;
$navy: mix($purple, #000, 50%);

@import "../../node_modules/basscss-sass/base-reset";
@import "../../node_modules/basscss-sass/base-forms";
@import "../../node_modules/basscss-sass/base-tables";
@import "../../node_modules/basscss-sass/base-typography";
@import "../../node_modules/basscss-sass/color-base";
@import "../../node_modules/basscss-sass/color-forms";
// @import "../../node_modules/basscss-sass/color-tables";
// @import "../../node_modules/basscss-sass/btn";
@import "./btn.scss";
@import "../../node_modules/basscss-sass/btn-primary";
// @import "../../node_modules/basscss-sass/btn-outline";
@import "../../node_modules/basscss-sass/type-scale";
@import "../../node_modules/basscss-sass/utility-typography";
@import "../../node_modules/basscss-sass/utility-layout";
@import "../../node_modules/basscss-sass/align";
@import "../../node_modules/basscss-sass/white-space";
// @import "../../node_modules/basscss-sass/positions";
@import "../../node_modules/basscss-sass/responsive-states";
@import "../../node_modules/basscss-sass/grid";
@import "../../node_modules/basscss-sass/flex-object";
@import "../../node_modules/basscss-sass/borders";
@import "../../node_modules/basscss-sass/colors";
@import "../../node_modules/basscss-sass/background-colors";
// @import "../../node_modules/basscss-sass/background-images";
// @import "../../node_modules/basscss-sass/border-colors";
@import "../../node_modules/basscss-sass/btn-sizes";
// @import "../../node_modules/basscss-sass/color-forms-dark";
// @import "../../node_modules/basscss-sass/color-input-range";
// @import "../../node_modules/basscss-sass/color-progress";
// @import "../../node_modules/basscss-sass/highlight";
// @import "../../node_modules/basscss-sass/input-range";
// @import "../../node_modules/basscss-sass/progress";
@import "../../node_modules/basscss-sass/responsive-white-space";
// @import "../../node_modules/basscss-sass/table-object";
// @import "../../node_modules/basscss-sass/ui-utility-groups";
@import "../../node_modules/basscss-sass/utility-headings";
@import "../../node_modules/utility-opentype/index";
@import "prism";

@import "quote";

* {
  box-sizing: border-box;
  font-synthesis: none;
}

html {
  -webkit-touch-callout: none;
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0); // iOS
  -webkit-tap-highloght-color: transparent;      // Android
  @supports not (font-kerning: normal) {
    font-feature-settings: "kern" 1;
  }
  font-kerning: normal;
}

body {
  font-size: 1.3em;
}

@each $prefix in "::-moz-selection", "::selection" {
  #{ $prefix } {
    background-color: $purple;
    color: $white;
    text-shadow: 0 0 0 transparent;
  }
}

img,
svg {
  display: block;
}

.btn {
  font-weight: normal;
  font-style: normal;
}


ul,
ol,
blockquote {
  padding-left: 0;
  padding-right: 0;
  margin-left: $space-3;
}

@media #{ $breakpoint-sm } {
  ul,
  ol,
  blockquote {
    padding-left: 0;
    padding-right: 0;
    margin-left: $space-3;
    margin-right: $space-3;
  }
}

@media #{ $breakpoint-md } {
  ul,
  ol {
    margin-left: 0;
    margin-right: 0;
  }

  // .list-indent {
  //   padding-left: $space-4 * 1.5;
  //   padding-right: $space-4;
  // }
}

blockquote {
  font-style: italic;
  footer {
    font-style: normal;
    margin-top: $space-1;
    padding-left: $space-3;
  }
}

a {
  color: $purple;
  &:hover,
  &:focus {
    color: darken($purple, 10%);
    text-decoration: none;
  }
  &:active {
    color: darken($purple, 20%);
  }
}

.overflow-hidden {
  overflow: hidden;
}

.a-alt a,
a.a-alt {
  color: inherit;
  border-bottom: 1px solid $purple;
}

// Copy from 1403
.weight-400 {
  font-weight: 400;
}

.italic {
  font-style: italic;
}

* > q:first-child {
  margin-left: -0.33em;
}

.anchor {
  display: inline-block;
  margin-right: $space-1;
  @media #{ $breakpoint-md } {
    margin-right: 0;
    text-indent: -1 * $space-3;
  }
}

.select-none {
  user-select: none;
}

.font-tisa {
  font-family: "ff-tisa-web-pro", "Tisa Pro", "FF Tisa Pro", "Gabriola", "Georgia", serif;
}

.font-enemy {
  font-family: "lt-enemy";
  font-weight: 400;
}

.font-lavanderia {
  font-family: "lt-lavanderia";
  font-weight: 400;
}

.font-proxima {
  font-family: "proxima-nova", "Proxima Nova", "Avenir Next", "AvenirNext-Regular", Verdana, sans-serif;
  font-weight: 300;
}

.liga-off {
  @supports not (font-variant-ligatures: normal) {
    font-feature-settings: "liga" 0;
  }
  font-variant-ligatures: no-common-ligatures; // Normal doesn’t work since liga is default
}


.calt-off {
  @supports not (font-variant-ligatures: normal) {
    font-feature-settings: "calt" 0;
  }
  font-variant-ligatures: no-contextual; // Normal doesn’t work since calt is default
}

.inline {
  display: inline;
}

figure {
  margin: 0;
  img {
    width: 100%;
  }
}

// Speak None
//
// Accessibility considerations for Basscss.
//
// Styleguide: base.speak-none
.speak-none,
[aria-hidden="true"] {
  speak: none;
}

.hidden {
  display: none;
  visibility: hidden;
  speak: none;
}

// Field
//
// [required] fix for Basscss.
//
// No styleguide reference.
.field:invalid[value=""][required] {
  border-color: transparent;
  &:active,
  &:focus {
    color: inherit;
  }
}

// Em Dash
//
// This won’t word break, while using `word-break` and an
// em dash in the HTML will.
//
// Markup:
// <span class="preface" data-content-"—">Kenneth Ormandy</span>
//
// No styleguide reference.
.preface:before {
  content: attr(data-content);
}

code {
  // background: $darken-1;
}

pre code {
  background: transparent;
}

.widont {
  display: inline-block; // Ignore the breaking space
  @media #{ $breakpoint-sm } {
    display: inline; // Restore the breaking space at larger screen sizes
  }
}

// Custom .btn-primary
//
// No styleguide reference.
.btn.btn-primary:hover,
.btn.btn-primary:focus {
  color: $white;
}

.btn.btn-primary:focus,
.btn.btn-primary:active {
  background-color: $red;
  border-color: $red;
  color: $white;
}

a:focus,
.btn:focus {
  color: $red;
  outline: none;
  box-shadow: inherit;
  border-color: inherit;
  text-decoration: inherit;
}

.test {
  &:hover {
    .test-feat {
      transition: color 0.33s ease-in-out;
      opacity: 1.0;
      color: $purple;
    }
    // This crazy part is for when you hover, and need to colour the
    // second glyph, but can’t wrap everything in spans, because that
    // will break the OpenType feature (ex. Ordinals, Contextual Alts)
    .test-overlay {
      color: $purple;
      &:before {
        content: attr(data-content);
        width: 0;
        overflow: visible;
        display: inline-block;
        color: $black;
        position: relative;
        z-index: 1;
      }
      // &.gray {
      //   &:before {
      //     color: $gray;
      //   }
      // }
    }
    // .test-ordn {
    //   color: $purple;
    //   &:before {
    //     color: $black;
    //   }
    // }
  }
}


// Basscss fix for padding in field
//
// I only did the class overrides I needed.
//
// Markup:
// <input type="text" class="field p2 sm-p3 h3">
//
// No styleguide reference.
.field.p2 {
  padding: $space-2;
  height: auto;
  font-size: inherit;
box-sizing: border-box;
}

.field.p2.sm-p3 {
    padding: $space-3;
    height: auto;
    font-size: inherit;
}

// Custom Basscss Border Colour alternative
//
// Markup:
// <div class="border border-thick">This will have a thick border</div>
//
// No styleguide reference.
.border-thick {
  border-width: $space-1;
}

.border-purple {
  border-color: $purple;
}

// Cursor utility
//
// No styleguide reference.
.cursor-default {
  cursor: default;
}

// Basscss `.caps` override
//
// Fixed with a varabiel in Basscss v7.1.x, but
// not converted to Sass yet. Utility OpenType
// therefore no longer handles this.
//
// No styleguide reference.
.caps {
  letter-spacing: 0;
}
